{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./node_modules/waypoints/lib/noframework.waypoints.min.js","webpack:///./src/js/svg.js","webpack:///./src/js/progress-bar.js","webpack:///./src/js/timer.js","webpack:///./src/js/slider.js","webpack:///./src/js/menu.js","webpack:///./src/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","length","$","selector","context","els","tempParent","html","trim","indexOf","match","split","push","toCreate","innerHTML","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","top","scrollY","scrollTop","clientTop","left","scrollX","scrollLeft","clientLeft","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","keys","forEach","methodName","Utils","obj","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","C","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","snapIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_bundle_slide","slideTo","runCallbacks","internal","slideIndex","animating","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","direction","autoHeight","transitionStart","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeThreshold","iOSEdgeSwipeThreshold","edgeSwipeDetection","iOSEdgeSwipeDetection","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","innerWidth","swiper_esm_bundle_Browser","isIE","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","dir","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","onwheel","implementation","hasFeature","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","currentScale","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","newPositionX","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","x2","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","scale2","sin","cos","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","hideOnClick","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","__webpack_exports__","M","Error","Adapter","adapter","horizontal","triggerPoint","group","Group","findOrCreate","Context","findOrCreateByElement","offsetAliases","queueTrigger","refresh","previous","invokeAll","destroyAll","disableAll","enableAll","refreshAll","viewportHeight","documentElement","viewportWidth","adapters","continuous","bottom-in-view","right-in-view","Waypoint","didScroll","didResize","oldScroll","waypoints","vertical","waypointContextKey","windowContext","createThrottledScrollHandler","createThrottledResizeHandler","checkEmpty","isEmptyObject","handleResize","handleScroll","isTouch","newScroll","forward","backward","h","id","flushTriggers","contextOffset","contextScroll","contextDimension","f","w","g","findByElement","mozRequestAnimationFrame","webkitRequestAnimationFrame","clearTriggerQueues","triggerQueues","up","down","right","inArray","first","last","defaultView","ownerDocument","pageYOffset","pageXOffset","svg","usdValue","Cap","MAX_VALUE","toFixed","MIN_VALUE","timer","setInterval","timeLeft","countDownDay","daysLeft","hoursLeft","minutesLeft","secondsLeft","daysEl","hoursEl","minutesEl","secondsEl","clearInterval","Swiper","767","1169","teamSwiper","mediaListener","screenSize","matchMedia","addListener","menuToggler","isMenuActive","mainNav","showInView","langValue","langList","_menu2","_slider2","_timer2","_progressBar2","_svg2"],"mappings":"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","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.0.7\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: June 14, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.3.5\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: July 31, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (swiper.isHorizontal()) {\n        slideSize = slide[0].getBoundingClientRect().width\n          + parseFloat(slideStyles.getPropertyValue('margin-left'))\n          + parseFloat(slideStyles.getPropertyValue('margin-right'));\n      } else {\n        slideSize = slide[0].getBoundingClientRect().height\n          + parseFloat(slideStyles.getPropertyValue('margin-top'))\n          + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n!function(){\"use strict\";function t(n){if(!n)throw new Error(\"No options passed to Waypoint constructor\");if(!n.element)throw new Error(\"No element option passed to Waypoint constructor\");if(!n.handler)throw new Error(\"No handler option passed to Waypoint constructor\");this.key=\"waypoint-\"+e,this.options=t.Adapter.extend({},t.defaults,n),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=n.handler,this.axis=this.options.horizontal?\"horizontal\":\"vertical\",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var n in i)e.push(i[n]);for(var o=0,r=e.length;r>o;o++)e[o][t]()},t.destroyAll=function(){t.invokeAll(\"destroy\")},t.disableAll=function(){t.invokeAll(\"disable\")},t.enableAll=function(){t.Context.refreshAll();for(var e in i)i[e].enabled=!0;return this},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:\"default\",horizontal:!1,offset:0},t.offsetAliases={\"bottom-in-view\":function(){return this.context.innerHeight()-this.adapter.outerHeight()},\"right-in-view\":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){\"use strict\";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=o.Adapter,this.adapter=new this.Adapter(t),this.key=\"waypoint-context-\"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,n[t.waypointContextKey]=this,i+=1,o.windowContext||(o.windowContext=!0,o.windowContext=new e(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,n={},o=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?\"horizontal\":\"vertical\";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical),i=this.element==this.element.window;t&&e&&!i&&(this.adapter.off(\".waypoints\"),delete n[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on(\"resize.waypoints\",function(){e.didResize||(e.didResize=!0,o.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on(\"scroll.waypoints\",function(){(!e.didScroll||o.isTouch)&&(e.didScroll=!0,o.requestAnimationFrame(t))})},e.prototype.handleResize=function(){o.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\"}};for(var i in e){var n=e[i],o=n.newScroll>n.oldScroll,r=o?n.forward:n.backward;for(var s in this.waypoints[i]){var l=this.waypoints[i][s];if(null!==l.triggerPoint){var a=n.oldScroll<l.triggerPoint,h=n.newScroll>=l.triggerPoint,p=a&&h,u=!a&&!h;(p||u)&&(l.queueTrigger(r),t[l.group.id]=l.group)}}}for(var d in t)t[d].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?o.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?o.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var n=0,o=t.length;o>n;n++)t[n].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),n={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\",offsetProp:\"left\"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\",offsetProp:\"top\"}};for(var r in t){var s=t[r];for(var l in this.waypoints[r]){var a,h,p,u,d,f=this.waypoints[r][l],c=f.options.offset,w=f.triggerPoint,y=0,g=null==w;f.element!==f.element.window&&(y=f.adapter.offset()[s.offsetProp]),\"function\"==typeof c?c=c.apply(f):\"string\"==typeof c&&(c=parseFloat(c),f.options.offset.indexOf(\"%\")>-1&&(c=Math.ceil(s.contextDimension*c/100))),a=s.contextScroll-s.contextOffset,f.triggerPoint=Math.floor(y+a-c),h=w<s.oldScroll,p=f.triggerPoint>=s.oldScroll,u=h&&p,d=!h&&!p,!g&&u?(f.queueTrigger(s.backward),n[f.group.id]=f.group):!g&&d?(f.queueTrigger(s.forward),n[f.group.id]=f.group):g&&s.oldScroll>=f.triggerPoint&&(f.queueTrigger(s.forward),n[f.group.id]=f.group)}}return o.requestAnimationFrame(function(){for(var t in n)n[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in n)n[t].refresh()},e.findByElement=function(t){return n[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},o.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},o.Context=e}(),function(){\"use strict\";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+\"-\"+this.axis,this.waypoints=[],this.clearTriggerQueues(),n[this.axis][this.name]=this}var n={vertical:{},horizontal:{}},o=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var n=this.triggerQueues[i],o=\"up\"===i||\"left\"===i;n.sort(o?e:t);for(var r=0,s=n.length;s>r;r+=1){var l=n[r];(l.options.continuous||r===n.length-1)&&l.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints),n=i===this.waypoints.length-1;return n?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=o.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return n[t.axis][t.name]||new i(t)},o.Group=i}(),function(){\"use strict\";function t(t){return t===t.window}function e(e){return t(e)?e:e.defaultView}function i(t){this.element=t,this.handlers={}}var n=window.Waypoint;i.prototype.innerHeight=function(){var e=t(this.element);return e?this.element.innerHeight:this.element.clientHeight},i.prototype.innerWidth=function(){var e=t(this.element);return e?this.element.innerWidth:this.element.clientWidth},i.prototype.off=function(t,e){function i(t,e,i){for(var n=0,o=e.length-1;o>n;n++){var r=e[n];i&&i!==r||t.removeEventListener(r)}}var n=t.split(\".\"),o=n[0],r=n[1],s=this.element;if(r&&this.handlers[r]&&o)i(s,this.handlers[r][o],e),this.handlers[r][o]=[];else if(o)for(var l in this.handlers)i(s,this.handlers[l][o]||[],e),this.handlers[l][o]=[];else if(r&&this.handlers[r]){for(var a in this.handlers[r])i(s,this.handlers[r][a],e);this.handlers[r]={}}},i.prototype.offset=function(){if(!this.element.ownerDocument)return null;var t=this.element.ownerDocument.documentElement,i=e(this.element.ownerDocument),n={top:0,left:0};return this.element.getBoundingClientRect&&(n=this.element.getBoundingClientRect()),{top:n.top+i.pageYOffset-t.clientTop,left:n.left+i.pageXOffset-t.clientLeft}},i.prototype.on=function(t,e){var i=t.split(\".\"),n=i[0],o=i[1]||\"__default\",r=this.handlers[o]=this.handlers[o]||{},s=r[n]=r[n]||[];s.push(e),this.element.addEventListener(n,e)},i.prototype.outerHeight=function(e){var i,n=this.innerHeight();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginTop,10),n+=parseInt(i.marginBottom,10)),n},i.prototype.outerWidth=function(e){var i,n=this.innerWidth();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginLeft,10),n+=parseInt(i.marginRight,10)),n},i.prototype.scrollLeft=function(){var t=e(this.element);return t?t.pageXOffset:this.element.scrollLeft},i.prototype.scrollTop=function(){var t=e(this.element);return t?t.pageYOffset:this.element.scrollTop},i.extend=function(){function t(t,e){if(\"object\"==typeof t&&\"object\"==typeof e)for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}for(var e=Array.prototype.slice.call(arguments),i=1,n=e.length;n>i;i++)t(e[0],e[i]);return e[0]},i.inArray=function(t,e,i){return null==e?-1:e.indexOf(t,i)},i.isEmptyObject=function(t){for(var e in t)return!1;return!0},n.adapters.push({name:\"noframework\",Adapter:i}),n.Adapter=i}();","require('waypoints/lib/noframework.waypoints.min.js');\n\nexport default function () {\n  const svgImages = document.querySelectorAll('.animate');\n\n  svgImages.forEach((svg) => {\n    const waypoint = new Waypoint({\n      element: svg,\n      handler() {\n        svg.classList.add('animate--active');\n      },\n      offset: '25%',\n    });\n  });\n}\n","function convertStringToNumber(string) {\n  const number = string.match(/\\d/g).join('');\n  return number;\n}\n\nconst Cap = {\n  MIN_VALUE: 0,\n  MAX_VALUE: 5000000,\n};\n\nexport default function init() {\n  const usdValue = convertStringToNumber(document.querySelector('.calc__caption--usd').textContent.trim());\n  const progressBar = document.querySelector('.calc__bar-inner');\n  const coefficient = `${((usdValue / Cap.MAX_VALUE) * 100).toFixed(2)}%`;\n  progressBar.style.width = coefficient;\n}\n","const daysEl = document.querySelector('#timerDays');\nconst hoursEl = document.querySelector('#timerHours');\nconst minutesEl = document.querySelector('#timerMinutes');\nconst secondsEl = document.querySelector('#timerSeconds');\nconst countDownDay = new Date('October 5, 2018 12:00:00');\n\nexport default function init() {\n  const timer = setInterval(() => {\n    const now = new Date().getTime();\n    const timeLeft = countDownDay - now;\n    const daysLeft = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n    const hoursLeft = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutesLeft = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\n    const secondsLeft = Math.floor((timeLeft % (1000 * 60)) / (1000));\n    daysEl.textContent = daysLeft;\n    hoursEl.textContent = hoursLeft;\n    minutesEl.textContent = minutesLeft;\n    secondsEl.textContent = secondsLeft;\n\n    if (timeLeft < 0) {\n      clearInterval(timer);\n      daysEl.textContent = 0;\n      hoursEl.textContent = 0;\n      minutesEl.textContent = 0;\n      secondsEl.textContent = 0;\n    }\n  }, 1000);\n}\n","import Swiper from 'swiper';\n\nexport default function init() {\n  const timelineSwiper = new Swiper('.timeline__wrapper', {\n    grabCursor: true,\n    centeredSlides: true,\n    keyboard: {\n      enabled: true,\n    },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    slidesPerView: 5,\n    spaceBetween: 60,\n    slideToClickedSlide: 'true',\n    breakpoints: {\n      // when window width is <= 767px\n      767: {\n        slidesPerView: 1,\n        spaceBetween: 30,\n      },\n      1169: {\n        slidesPerView: 3,\n        spaceBetween: 50,\n      },\n    },\n  });\n  timelineSwiper.slideTo(2, 1000, false);\n\n  const teamSwiper = new Swiper('.team__wrapper', {\n    grabCursor: true,\n    keyboard: {\n      enabled: true,\n    },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    breakpoints: {\n      // when window width is <= 767px\n      767: {\n        loop: true,\n        slidesPerView: 1,\n        spaceBetween: 30,\n      },\n      // when window width is <= 1169px\n      1169: {\n        loop: true,\n        slidesPerView: 2,\n        spaceBetween: 55,\n      },\n    },\n  });\n  teamSwiper.slideTo(1, 1000, false);\n\n  const pressSwiper = new Swiper('.press__wrapper', {\n    grabCursor: true,\n    keyboard: {\n      enabled: true,\n    },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    pagination: {\n      el: '.swiper-pagination',\n      clickable: true,\n    },\n    loop: true,\n    slidesPerView: 1,\n    spaceBetween: 200,\n    breakpoints: {\n      // when window width is <= 767px\n      767: {\n        spaceBetween: 30,\n      },\n      // when window width is <= 1169px\n      1169: {\n        spaceBetween: 100,\n      },\n    },\n  });\n  pressSwiper.slideTo(2, 1000, false);\n\n  function mediaListener(screenSize) {\n    if (screenSize.matches) {\n      teamSwiper.destroy(true, true);\n    }\n  }\n\n  const breakpoint = window.matchMedia('(min-width: 1169px)');\n  mediaListener(breakpoint);\n  breakpoint.addListener(mediaListener);\n}\n","const menuToggler = document.querySelector('.navigation__toggler');\nconst mainNav = document.querySelector('.navigation');\nconst langList = document.querySelector('.lang__list');\nconst langValue = document.querySelector('.lang__value');\n\nlet isMenuActive = false;\n\nfunction toggleMenu() {\n  if (!isMenuActive) {\n    menuToggler.classList.add('navigation__toggler--active');\n    mainNav.classList.add('navigation--active');\n    isMenuActive = true;\n  } else {\n    menuToggler.classList.remove('navigation__toggler--active');\n    mainNav.classList.remove('navigation--active');\n    isMenuActive = false;\n  }\n}\n\nfunction showInView() {\n  if (window.scrollY >= 5) {\n    mainNav.classList.add('navigation--in-view');\n  } else {\n    mainNav.classList.remove('navigation--in-view');\n  }\n}\n\nexport default function init() {\n  menuToggler.addEventListener('click', (event) => {\n    event.preventDefault();\n    toggleMenu();\n  });\n\n  window.addEventListener('scroll', showInView);\n\n  langValue.addEventListener('click', () => {\n    langValue.classList.toggle('lang__value--active');\n    langList.classList.toggle('lang__list--active');\n  });\n}\n","import initMenu from './menu';\nimport initSlider from './slider';\nimport initTimer from './timer';\nimport initProgressBar from './progress-bar';\nimport initSvgAnimation from './svg';\n\ninitMenu();\ninitSlider();\ninitTimer();\ninitProgressBar();\ninitSvgAnimation();\n"],"sourceRoot":""}